== Prototype Pattern ==

- Sometimes creating a new object is more expensive, so we resort to copying objects.
- What if a class can only be loaded at runtime, and you can't access its constructor statically. The runtime env creates
each dynamically created object and stores it with a prototype manager. The application can request objects from the prototype
manager which in turn can return a clone of the protoype.
- Number of classes can be reduced by just modifying the prototype clones values.

== Dynamic Loading ==

An application can't access the class's constructor statically. So it requests a clone of the created
object, and edits it to create the required object.

== Cloning == 

Can be tricky because of circular references. but it's not hard.